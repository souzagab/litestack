schema:
  1:
    create_table_queue: >
      CREATE TABLE IF NOT EXISTS queue(
        id TEXT PRIMARY KEY DEFAULT(hex(randomblob(32))) NOT NULL ON CONFLICT REPLACE,
        name TEXT DEFAULT('default') NOT NULL ON CONFLICT REPLACE,
        fire_at REAL DEFAULT(unixepoch('subsec')) NOT NULL ON CONFLICT REPLACE,
        value TEXT,
        created_at INTEGER DEFAULT(unixepoch()) NOT NULL ON CONFLICT REPLACE
      ) WITHOUT ROWID;

    create_index_queue_by_name: >
      CREATE INDEX IF NOT EXISTS idx_queue_by_name ON queue(name, fire_at ASC);

stmts:

  push: >
    INSERT INTO queue(id, name, fire_at, value)
    VALUES (hex(randomblob(32)), $1, (unixepoch('subsec') + $2), $3)
    RETURNING id, name;

  repush: >
    INSERT INTO queue(id, name, fire_at, value)
    VALUES (?, ?, (unixepoch('subsec') + ?), ?)
    RETURNING name;

  pop_in_place: >
    UPDATE queue
    SET 
      name = '->:' || name,
      fire_at = unixepoch('subsec')
    WHERE (name, fire_at, id)
    IN (
      SELECT name, fire_at, id FROM queue
      WHERE name = ifnull($1, 'default')
        AND fire_at <= (unixepoch('subsec'))
      ORDER BY fire_at ASC
      LIMIT ifnull($2, 1)
    )
    RETURNING id, value;      

  pop: >
    DELETE FROM queue
    WHERE (name, fire_at, id)
    IN (
      SELECT name, fire_at, id FROM queue
      WHERE name = ifnull($1, 'default')
        AND fire_at <= (unixepoch('subsec'))
      ORDER BY fire_at ASC
      LIMIT ifnull($2, 1)
    )
    RETURNING id, value;

  delete: >
    DELETE FROM queue
    WHERE id = $1
    RETURNING value;
  
  search: >
    SELECT *,  :params, value ->> '$.params', value ->> '$.params' LIKE '%'||'three_second'||'%' FROM queue 
    WHERE
      name = ifnull(:name, name)
    AND
      iif(:fire_at_from, fire_at >= :fire_at_from, true)
    AND
      iif(:fire_at_to, fire_at <= :fire_at_to, true)
    AND
      iif(:created_at_from, created_at >= :created_at_from, true)
    AND
      iif(:created_at_to, created_at <= :created_at_to, true)
    AND
      iif(:klass IS NOT NULL, value ->> '$.klass' LIKE '%'||:klass||'%', true)  
    AND
      iif(:params IS NOT NULL, value ->> '$.params' LIKE '%'||:params||'%', true)  
    ORDER BY created_at * :dir;
    
  info: >
    SELECT
      name,
      count(*) AS count,
      avg(unixepoch() - created_at) AS avg,
      min(unixepoch() - created_at) AS min,
      max(unixepoch() - created_at) AS max
    FROM queue
    GROUP BY name
    ORDER BY count DESC;
